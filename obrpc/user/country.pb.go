// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: user/country.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrencyCode int32

const (
	CurrencyCode_UNKNOWNCurrency CurrencyCode = 0
	CurrencyCode_CNY             CurrencyCode = 1
	CurrencyCode_USD             CurrencyCode = 2
	CurrencyCode_GBP             CurrencyCode = 3
	CurrencyCode_HKD             CurrencyCode = 4
	CurrencyCode_CHF             CurrencyCode = 5
	CurrencyCode_SGD             CurrencyCode = 6
	CurrencyCode_SEK             CurrencyCode = 7
	CurrencyCode_DKK             CurrencyCode = 8
	CurrencyCode_NOK             CurrencyCode = 9
	CurrencyCode_JPY             CurrencyCode = 10
	CurrencyCode_CAD             CurrencyCode = 11
	CurrencyCode_AUD             CurrencyCode = 12
	CurrencyCode_EUR             CurrencyCode = 13
	CurrencyCode_MOP             CurrencyCode = 14
	CurrencyCode_PHP             CurrencyCode = 15
	CurrencyCode_THB             CurrencyCode = 16
	CurrencyCode_NZD             CurrencyCode = 17
	CurrencyCode_KRW             CurrencyCode = 18
	CurrencyCode_RUB             CurrencyCode = 19
	CurrencyCode_MYR             CurrencyCode = 20
	CurrencyCode_TWD             CurrencyCode = 21
	CurrencyCode_INR             CurrencyCode = 22
)

// Enum value maps for CurrencyCode.
var (
	CurrencyCode_name = map[int32]string{
		0:  "UNKNOWNCurrency",
		1:  "CNY",
		2:  "USD",
		3:  "GBP",
		4:  "HKD",
		5:  "CHF",
		6:  "SGD",
		7:  "SEK",
		8:  "DKK",
		9:  "NOK",
		10: "JPY",
		11: "CAD",
		12: "AUD",
		13: "EUR",
		14: "MOP",
		15: "PHP",
		16: "THB",
		17: "NZD",
		18: "KRW",
		19: "RUB",
		20: "MYR",
		21: "TWD",
		22: "INR",
	}
	CurrencyCode_value = map[string]int32{
		"UNKNOWNCurrency": 0,
		"CNY":             1,
		"USD":             2,
		"GBP":             3,
		"HKD":             4,
		"CHF":             5,
		"SGD":             6,
		"SEK":             7,
		"DKK":             8,
		"NOK":             9,
		"JPY":             10,
		"CAD":             11,
		"AUD":             12,
		"EUR":             13,
		"MOP":             14,
		"PHP":             15,
		"THB":             16,
		"NZD":             17,
		"KRW":             18,
		"RUB":             19,
		"MYR":             20,
		"TWD":             21,
		"INR":             22,
	}
)

func (x CurrencyCode) Enum() *CurrencyCode {
	p := new(CurrencyCode)
	*p = x
	return p
}

func (x CurrencyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrencyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_user_country_proto_enumTypes[0].Descriptor()
}

func (CurrencyCode) Type() protoreflect.EnumType {
	return &file_user_country_proto_enumTypes[0]
}

func (x CurrencyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrencyCode.Descriptor instead.
func (CurrencyCode) EnumDescriptor() ([]byte, []int) {
	return file_user_country_proto_rawDescGZIP(), []int{0}
}

type CountryCode int32

const (
	CountryCode_UNKNOWNISO CountryCode = 0
	CountryCode_AF         CountryCode = 1
	CountryCode_AL         CountryCode = 2
	CountryCode_DZ         CountryCode = 3
	CountryCode_AS         CountryCode = 4
	CountryCode_AD         CountryCode = 5
	CountryCode_AO         CountryCode = 6
	CountryCode_AI         CountryCode = 7
	CountryCode_AQ         CountryCode = 8
	CountryCode_AG         CountryCode = 9
	CountryCode_AR         CountryCode = 10
	CountryCode_AM         CountryCode = 11
	CountryCode_AW         CountryCode = 12
	CountryCode_AU         CountryCode = 13
	CountryCode_AT         CountryCode = 14
	CountryCode_AZ         CountryCode = 15
	CountryCode_BS         CountryCode = 16
	CountryCode_BH         CountryCode = 17
	CountryCode_BD         CountryCode = 18
	CountryCode_BB         CountryCode = 19
	CountryCode_BY         CountryCode = 20
	CountryCode_BE         CountryCode = 21
	CountryCode_BZ         CountryCode = 22
	CountryCode_BJ         CountryCode = 23
	CountryCode_BM         CountryCode = 24
	CountryCode_BT         CountryCode = 25
	CountryCode_BO         CountryCode = 26
	CountryCode_BA         CountryCode = 27
	CountryCode_BW         CountryCode = 28
	CountryCode_BR         CountryCode = 29
	CountryCode_IO         CountryCode = 30
	CountryCode_VG         CountryCode = 31
	CountryCode_BN         CountryCode = 32
	CountryCode_BG         CountryCode = 33
	CountryCode_BF         CountryCode = 34
	CountryCode_MM         CountryCode = 35
	CountryCode_BI         CountryCode = 36
	CountryCode_KH         CountryCode = 37
	CountryCode_CM         CountryCode = 38
	CountryCode_CA         CountryCode = 39
	CountryCode_CV         CountryCode = 40
	CountryCode_KY         CountryCode = 41
	CountryCode_CF         CountryCode = 42
	CountryCode_TD         CountryCode = 43
	CountryCode_CL         CountryCode = 44
	CountryCode_CN         CountryCode = 45
	CountryCode_CX         CountryCode = 46
	CountryCode_CC         CountryCode = 47
	CountryCode_CO         CountryCode = 48
	CountryCode_KM         CountryCode = 49
	CountryCode_CG         CountryCode = 50
	CountryCode_CD         CountryCode = 51
	CountryCode_CK         CountryCode = 52
	CountryCode_CR         CountryCode = 53
	CountryCode_HR         CountryCode = 54
	CountryCode_CU         CountryCode = 55
	CountryCode_CW         CountryCode = 56
	CountryCode_CY         CountryCode = 57
	CountryCode_CZ         CountryCode = 58
	CountryCode_DK         CountryCode = 59
	CountryCode_DJ         CountryCode = 60
	CountryCode_DM         CountryCode = 61
	CountryCode_DO         CountryCode = 62
	CountryCode_TL         CountryCode = 63
	CountryCode_EC         CountryCode = 64
	CountryCode_EG         CountryCode = 65
	CountryCode_SV         CountryCode = 66
	CountryCode_GQ         CountryCode = 67
	CountryCode_ER         CountryCode = 68
	CountryCode_EE         CountryCode = 69
	CountryCode_ET         CountryCode = 70
	CountryCode_FK         CountryCode = 71
	CountryCode_FO         CountryCode = 72
	CountryCode_FJ         CountryCode = 73
	CountryCode_FI         CountryCode = 74
	CountryCode_FR         CountryCode = 75
	CountryCode_PF         CountryCode = 76
	CountryCode_GA         CountryCode = 77
	CountryCode_GM         CountryCode = 78
	CountryCode_GE         CountryCode = 79
	CountryCode_DE         CountryCode = 80
	CountryCode_GH         CountryCode = 81
	CountryCode_GI         CountryCode = 82
	CountryCode_GR         CountryCode = 83
	CountryCode_GL         CountryCode = 84
	CountryCode_GD         CountryCode = 85
	CountryCode_GU         CountryCode = 86
	CountryCode_GT         CountryCode = 87
	CountryCode_GG         CountryCode = 88
	CountryCode_GN         CountryCode = 89
	CountryCode_GW         CountryCode = 90
	CountryCode_GY         CountryCode = 91
	CountryCode_HT         CountryCode = 92
	CountryCode_HN         CountryCode = 93
	CountryCode_HK         CountryCode = 94
	CountryCode_HU         CountryCode = 95
	CountryCode_IS         CountryCode = 96
	CountryCode_IN         CountryCode = 97
	CountryCode_ID         CountryCode = 98
	CountryCode_IR         CountryCode = 99
	CountryCode_IQ         CountryCode = 100
	CountryCode_IE         CountryCode = 101
	CountryCode_IM         CountryCode = 102
	CountryCode_IL         CountryCode = 103
	CountryCode_IT         CountryCode = 104
	CountryCode_CI         CountryCode = 105
	CountryCode_JM         CountryCode = 106
	CountryCode_JP         CountryCode = 107
	CountryCode_JE         CountryCode = 108
	CountryCode_JO         CountryCode = 109
	CountryCode_KZ         CountryCode = 110
	CountryCode_KE         CountryCode = 111
	CountryCode_KI         CountryCode = 112
	CountryCode_XK         CountryCode = 113
	CountryCode_KW         CountryCode = 114
	CountryCode_KG         CountryCode = 115
	CountryCode_LA         CountryCode = 116
	CountryCode_LV         CountryCode = 117
	CountryCode_LB         CountryCode = 118
	CountryCode_LS         CountryCode = 119
	CountryCode_LR         CountryCode = 120
	CountryCode_LY         CountryCode = 121
	CountryCode_LI         CountryCode = 122
	CountryCode_LT         CountryCode = 123
	CountryCode_LU         CountryCode = 124
	CountryCode_MO         CountryCode = 125
	CountryCode_MK         CountryCode = 126
	CountryCode_MG         CountryCode = 127
	CountryCode_MW         CountryCode = 128
	CountryCode_MY         CountryCode = 129
	CountryCode_MV         CountryCode = 130
	CountryCode_ML         CountryCode = 131
	CountryCode_MT         CountryCode = 132
	CountryCode_MH         CountryCode = 133
	CountryCode_MR         CountryCode = 134
	CountryCode_MU         CountryCode = 135
	CountryCode_YT         CountryCode = 136
	CountryCode_MX         CountryCode = 137
	CountryCode_FM         CountryCode = 138
	CountryCode_MD         CountryCode = 139
	CountryCode_MC         CountryCode = 140
	CountryCode_MN         CountryCode = 141
	CountryCode_ME         CountryCode = 142
	CountryCode_MS         CountryCode = 143
	CountryCode_MA         CountryCode = 144
	CountryCode_MZ         CountryCode = 145
	CountryCode_NA         CountryCode = 146
	CountryCode_NR         CountryCode = 147
	CountryCode_NP         CountryCode = 148
	CountryCode_NL         CountryCode = 149
	CountryCode_AN         CountryCode = 150
	CountryCode_NC         CountryCode = 151
	CountryCode_NZ         CountryCode = 152
	CountryCode_NI         CountryCode = 153
	CountryCode_NE         CountryCode = 154
	CountryCode_NG         CountryCode = 155
	CountryCode_NU         CountryCode = 156
	CountryCode_MP         CountryCode = 157
	CountryCode_KP         CountryCode = 158
	CountryCode_NO         CountryCode = 159
	CountryCode_OM         CountryCode = 160
	CountryCode_PK         CountryCode = 161
	CountryCode_PW         CountryCode = 162
	CountryCode_PS         CountryCode = 163
	CountryCode_PA         CountryCode = 164
	CountryCode_PG         CountryCode = 165
	CountryCode_PY         CountryCode = 166
	CountryCode_PE         CountryCode = 167
	CountryCode_PH         CountryCode = 168
	CountryCode_PN         CountryCode = 169
	CountryCode_PL         CountryCode = 170
	CountryCode_PT         CountryCode = 171
	CountryCode_PR         CountryCode = 172
	CountryCode_QA         CountryCode = 173
	CountryCode_RE         CountryCode = 174
	CountryCode_RO         CountryCode = 175
	CountryCode_RU         CountryCode = 176
	CountryCode_RW         CountryCode = 177
	CountryCode_BL         CountryCode = 178
	CountryCode_WS         CountryCode = 179
	CountryCode_SM         CountryCode = 180
	CountryCode_ST         CountryCode = 181
	CountryCode_SA         CountryCode = 182
	CountryCode_SN         CountryCode = 183
	CountryCode_RS         CountryCode = 184
	CountryCode_SC         CountryCode = 185
	CountryCode_SL         CountryCode = 186
	CountryCode_SG         CountryCode = 187
	CountryCode_SX         CountryCode = 188
	CountryCode_SK         CountryCode = 189
	CountryCode_SI         CountryCode = 190
	CountryCode_SB         CountryCode = 191
	CountryCode_SO         CountryCode = 192
	CountryCode_ZA         CountryCode = 193
	CountryCode_KR         CountryCode = 194
	CountryCode_SS         CountryCode = 195
	CountryCode_ES         CountryCode = 196
	CountryCode_LK         CountryCode = 197
	CountryCode_SH         CountryCode = 198
	CountryCode_KN         CountryCode = 199
	CountryCode_LC         CountryCode = 200
	CountryCode_MF         CountryCode = 201
	CountryCode_PM         CountryCode = 202
	CountryCode_VC         CountryCode = 203
	CountryCode_SD         CountryCode = 204
	CountryCode_SR         CountryCode = 205
	CountryCode_SJ         CountryCode = 206
	CountryCode_SZ         CountryCode = 207
	CountryCode_SE         CountryCode = 208
	CountryCode_CH         CountryCode = 209
	CountryCode_SY         CountryCode = 210
	CountryCode_TW         CountryCode = 211
	CountryCode_TJ         CountryCode = 212
	CountryCode_TZ         CountryCode = 213
	CountryCode_TH         CountryCode = 214
	CountryCode_TG         CountryCode = 215
	CountryCode_TK         CountryCode = 216
	CountryCode_TO         CountryCode = 217
	CountryCode_TT         CountryCode = 218
	CountryCode_TN         CountryCode = 219
	CountryCode_TR         CountryCode = 220
	CountryCode_TM         CountryCode = 221
	CountryCode_TC         CountryCode = 222
	CountryCode_TV         CountryCode = 223
	CountryCode_AE         CountryCode = 224
	CountryCode_UG         CountryCode = 225
	CountryCode_GB         CountryCode = 226
	CountryCode_UA         CountryCode = 227
	CountryCode_UY         CountryCode = 228
	CountryCode_US         CountryCode = 229
	CountryCode_UZ         CountryCode = 230
	CountryCode_VU         CountryCode = 231
	CountryCode_VA         CountryCode = 232
	CountryCode_VE         CountryCode = 233
	CountryCode_VN         CountryCode = 234
	CountryCode_VI         CountryCode = 235
	CountryCode_WF         CountryCode = 236
	CountryCode_EH         CountryCode = 237
	CountryCode_YE         CountryCode = 238
	CountryCode_ZM         CountryCode = 239
	CountryCode_ZW         CountryCode = 240
)

// Enum value maps for CountryCode.
var (
	CountryCode_name = map[int32]string{
		0:   "UNKNOWNISO",
		1:   "AF",
		2:   "AL",
		3:   "DZ",
		4:   "AS",
		5:   "AD",
		6:   "AO",
		7:   "AI",
		8:   "AQ",
		9:   "AG",
		10:  "AR",
		11:  "AM",
		12:  "AW",
		13:  "AU",
		14:  "AT",
		15:  "AZ",
		16:  "BS",
		17:  "BH",
		18:  "BD",
		19:  "BB",
		20:  "BY",
		21:  "BE",
		22:  "BZ",
		23:  "BJ",
		24:  "BM",
		25:  "BT",
		26:  "BO",
		27:  "BA",
		28:  "BW",
		29:  "BR",
		30:  "IO",
		31:  "VG",
		32:  "BN",
		33:  "BG",
		34:  "BF",
		35:  "MM",
		36:  "BI",
		37:  "KH",
		38:  "CM",
		39:  "CA",
		40:  "CV",
		41:  "KY",
		42:  "CF",
		43:  "TD",
		44:  "CL",
		45:  "CN",
		46:  "CX",
		47:  "CC",
		48:  "CO",
		49:  "KM",
		50:  "CG",
		51:  "CD",
		52:  "CK",
		53:  "CR",
		54:  "HR",
		55:  "CU",
		56:  "CW",
		57:  "CY",
		58:  "CZ",
		59:  "DK",
		60:  "DJ",
		61:  "DM",
		62:  "DO",
		63:  "TL",
		64:  "EC",
		65:  "EG",
		66:  "SV",
		67:  "GQ",
		68:  "ER",
		69:  "EE",
		70:  "ET",
		71:  "FK",
		72:  "FO",
		73:  "FJ",
		74:  "FI",
		75:  "FR",
		76:  "PF",
		77:  "GA",
		78:  "GM",
		79:  "GE",
		80:  "DE",
		81:  "GH",
		82:  "GI",
		83:  "GR",
		84:  "GL",
		85:  "GD",
		86:  "GU",
		87:  "GT",
		88:  "GG",
		89:  "GN",
		90:  "GW",
		91:  "GY",
		92:  "HT",
		93:  "HN",
		94:  "HK",
		95:  "HU",
		96:  "IS",
		97:  "IN",
		98:  "ID",
		99:  "IR",
		100: "IQ",
		101: "IE",
		102: "IM",
		103: "IL",
		104: "IT",
		105: "CI",
		106: "JM",
		107: "JP",
		108: "JE",
		109: "JO",
		110: "KZ",
		111: "KE",
		112: "KI",
		113: "XK",
		114: "KW",
		115: "KG",
		116: "LA",
		117: "LV",
		118: "LB",
		119: "LS",
		120: "LR",
		121: "LY",
		122: "LI",
		123: "LT",
		124: "LU",
		125: "MO",
		126: "MK",
		127: "MG",
		128: "MW",
		129: "MY",
		130: "MV",
		131: "ML",
		132: "MT",
		133: "MH",
		134: "MR",
		135: "MU",
		136: "YT",
		137: "MX",
		138: "FM",
		139: "MD",
		140: "MC",
		141: "MN",
		142: "ME",
		143: "MS",
		144: "MA",
		145: "MZ",
		146: "NA",
		147: "NR",
		148: "NP",
		149: "NL",
		150: "AN",
		151: "NC",
		152: "NZ",
		153: "NI",
		154: "NE",
		155: "NG",
		156: "NU",
		157: "MP",
		158: "KP",
		159: "NO",
		160: "OM",
		161: "PK",
		162: "PW",
		163: "PS",
		164: "PA",
		165: "PG",
		166: "PY",
		167: "PE",
		168: "PH",
		169: "PN",
		170: "PL",
		171: "PT",
		172: "PR",
		173: "QA",
		174: "RE",
		175: "RO",
		176: "RU",
		177: "RW",
		178: "BL",
		179: "WS",
		180: "SM",
		181: "ST",
		182: "SA",
		183: "SN",
		184: "RS",
		185: "SC",
		186: "SL",
		187: "SG",
		188: "SX",
		189: "SK",
		190: "SI",
		191: "SB",
		192: "SO",
		193: "ZA",
		194: "KR",
		195: "SS",
		196: "ES",
		197: "LK",
		198: "SH",
		199: "KN",
		200: "LC",
		201: "MF",
		202: "PM",
		203: "VC",
		204: "SD",
		205: "SR",
		206: "SJ",
		207: "SZ",
		208: "SE",
		209: "CH",
		210: "SY",
		211: "TW",
		212: "TJ",
		213: "TZ",
		214: "TH",
		215: "TG",
		216: "TK",
		217: "TO",
		218: "TT",
		219: "TN",
		220: "TR",
		221: "TM",
		222: "TC",
		223: "TV",
		224: "AE",
		225: "UG",
		226: "GB",
		227: "UA",
		228: "UY",
		229: "US",
		230: "UZ",
		231: "VU",
		232: "VA",
		233: "VE",
		234: "VN",
		235: "VI",
		236: "WF",
		237: "EH",
		238: "YE",
		239: "ZM",
		240: "ZW",
	}
	CountryCode_value = map[string]int32{
		"UNKNOWNISO": 0,
		"AF":         1,
		"AL":         2,
		"DZ":         3,
		"AS":         4,
		"AD":         5,
		"AO":         6,
		"AI":         7,
		"AQ":         8,
		"AG":         9,
		"AR":         10,
		"AM":         11,
		"AW":         12,
		"AU":         13,
		"AT":         14,
		"AZ":         15,
		"BS":         16,
		"BH":         17,
		"BD":         18,
		"BB":         19,
		"BY":         20,
		"BE":         21,
		"BZ":         22,
		"BJ":         23,
		"BM":         24,
		"BT":         25,
		"BO":         26,
		"BA":         27,
		"BW":         28,
		"BR":         29,
		"IO":         30,
		"VG":         31,
		"BN":         32,
		"BG":         33,
		"BF":         34,
		"MM":         35,
		"BI":         36,
		"KH":         37,
		"CM":         38,
		"CA":         39,
		"CV":         40,
		"KY":         41,
		"CF":         42,
		"TD":         43,
		"CL":         44,
		"CN":         45,
		"CX":         46,
		"CC":         47,
		"CO":         48,
		"KM":         49,
		"CG":         50,
		"CD":         51,
		"CK":         52,
		"CR":         53,
		"HR":         54,
		"CU":         55,
		"CW":         56,
		"CY":         57,
		"CZ":         58,
		"DK":         59,
		"DJ":         60,
		"DM":         61,
		"DO":         62,
		"TL":         63,
		"EC":         64,
		"EG":         65,
		"SV":         66,
		"GQ":         67,
		"ER":         68,
		"EE":         69,
		"ET":         70,
		"FK":         71,
		"FO":         72,
		"FJ":         73,
		"FI":         74,
		"FR":         75,
		"PF":         76,
		"GA":         77,
		"GM":         78,
		"GE":         79,
		"DE":         80,
		"GH":         81,
		"GI":         82,
		"GR":         83,
		"GL":         84,
		"GD":         85,
		"GU":         86,
		"GT":         87,
		"GG":         88,
		"GN":         89,
		"GW":         90,
		"GY":         91,
		"HT":         92,
		"HN":         93,
		"HK":         94,
		"HU":         95,
		"IS":         96,
		"IN":         97,
		"ID":         98,
		"IR":         99,
		"IQ":         100,
		"IE":         101,
		"IM":         102,
		"IL":         103,
		"IT":         104,
		"CI":         105,
		"JM":         106,
		"JP":         107,
		"JE":         108,
		"JO":         109,
		"KZ":         110,
		"KE":         111,
		"KI":         112,
		"XK":         113,
		"KW":         114,
		"KG":         115,
		"LA":         116,
		"LV":         117,
		"LB":         118,
		"LS":         119,
		"LR":         120,
		"LY":         121,
		"LI":         122,
		"LT":         123,
		"LU":         124,
		"MO":         125,
		"MK":         126,
		"MG":         127,
		"MW":         128,
		"MY":         129,
		"MV":         130,
		"ML":         131,
		"MT":         132,
		"MH":         133,
		"MR":         134,
		"MU":         135,
		"YT":         136,
		"MX":         137,
		"FM":         138,
		"MD":         139,
		"MC":         140,
		"MN":         141,
		"ME":         142,
		"MS":         143,
		"MA":         144,
		"MZ":         145,
		"NA":         146,
		"NR":         147,
		"NP":         148,
		"NL":         149,
		"AN":         150,
		"NC":         151,
		"NZ":         152,
		"NI":         153,
		"NE":         154,
		"NG":         155,
		"NU":         156,
		"MP":         157,
		"KP":         158,
		"NO":         159,
		"OM":         160,
		"PK":         161,
		"PW":         162,
		"PS":         163,
		"PA":         164,
		"PG":         165,
		"PY":         166,
		"PE":         167,
		"PH":         168,
		"PN":         169,
		"PL":         170,
		"PT":         171,
		"PR":         172,
		"QA":         173,
		"RE":         174,
		"RO":         175,
		"RU":         176,
		"RW":         177,
		"BL":         178,
		"WS":         179,
		"SM":         180,
		"ST":         181,
		"SA":         182,
		"SN":         183,
		"RS":         184,
		"SC":         185,
		"SL":         186,
		"SG":         187,
		"SX":         188,
		"SK":         189,
		"SI":         190,
		"SB":         191,
		"SO":         192,
		"ZA":         193,
		"KR":         194,
		"SS":         195,
		"ES":         196,
		"LK":         197,
		"SH":         198,
		"KN":         199,
		"LC":         200,
		"MF":         201,
		"PM":         202,
		"VC":         203,
		"SD":         204,
		"SR":         205,
		"SJ":         206,
		"SZ":         207,
		"SE":         208,
		"CH":         209,
		"SY":         210,
		"TW":         211,
		"TJ":         212,
		"TZ":         213,
		"TH":         214,
		"TG":         215,
		"TK":         216,
		"TO":         217,
		"TT":         218,
		"TN":         219,
		"TR":         220,
		"TM":         221,
		"TC":         222,
		"TV":         223,
		"AE":         224,
		"UG":         225,
		"GB":         226,
		"UA":         227,
		"UY":         228,
		"US":         229,
		"UZ":         230,
		"VU":         231,
		"VA":         232,
		"VE":         233,
		"VN":         234,
		"VI":         235,
		"WF":         236,
		"EH":         237,
		"YE":         238,
		"ZM":         239,
		"ZW":         240,
	}
)

func (x CountryCode) Enum() *CountryCode {
	p := new(CountryCode)
	*p = x
	return p
}

func (x CountryCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountryCode) Descriptor() protoreflect.EnumDescriptor {
	return file_user_country_proto_enumTypes[1].Descriptor()
}

func (CountryCode) Type() protoreflect.EnumType {
	return &file_user_country_proto_enumTypes[1]
}

func (x CountryCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CountryCode.Descriptor instead.
func (CountryCode) EnumDescriptor() ([]byte, []int) {
	return file_user_country_proto_rawDescGZIP(), []int{1}
}

type CountryISOCode1 int32

const (
	CountryISOCode1_UNKNOWN CountryISOCode1 = 0
	CountryISOCode1_AFG     CountryISOCode1 = 1
	CountryISOCode1_ALB     CountryISOCode1 = 2
	CountryISOCode1_DZA     CountryISOCode1 = 3
	CountryISOCode1_ASM     CountryISOCode1 = 4
	CountryISOCode1_AND     CountryISOCode1 = 5
	CountryISOCode1_AGO     CountryISOCode1 = 6
	CountryISOCode1_AIA     CountryISOCode1 = 7
	CountryISOCode1_ATA     CountryISOCode1 = 8
	CountryISOCode1_ATG     CountryISOCode1 = 9
	CountryISOCode1_ARG     CountryISOCode1 = 10
	CountryISOCode1_ARM     CountryISOCode1 = 11
	CountryISOCode1_ABW     CountryISOCode1 = 12
	CountryISOCode1_AUS     CountryISOCode1 = 13
	CountryISOCode1_AUT     CountryISOCode1 = 14
	CountryISOCode1_AZE     CountryISOCode1 = 15
	CountryISOCode1_BHS     CountryISOCode1 = 16
	CountryISOCode1_BHR     CountryISOCode1 = 17
	CountryISOCode1_BGD     CountryISOCode1 = 18
	CountryISOCode1_BRB     CountryISOCode1 = 19
	CountryISOCode1_BLR     CountryISOCode1 = 20
	CountryISOCode1_BEL     CountryISOCode1 = 21
	CountryISOCode1_BLZ     CountryISOCode1 = 22
	CountryISOCode1_BEN     CountryISOCode1 = 23
	CountryISOCode1_BMU     CountryISOCode1 = 24
	CountryISOCode1_BTN     CountryISOCode1 = 25
	CountryISOCode1_BOL     CountryISOCode1 = 26
	CountryISOCode1_BIH     CountryISOCode1 = 27
	CountryISOCode1_BWA     CountryISOCode1 = 28
	CountryISOCode1_BRA     CountryISOCode1 = 29
	CountryISOCode1_IOT     CountryISOCode1 = 30
	CountryISOCode1_VGB     CountryISOCode1 = 31
	CountryISOCode1_BRN     CountryISOCode1 = 32
	CountryISOCode1_BGR     CountryISOCode1 = 33
	CountryISOCode1_BFA     CountryISOCode1 = 34
	CountryISOCode1_MMR     CountryISOCode1 = 35
	CountryISOCode1_BDI     CountryISOCode1 = 36
	CountryISOCode1_KHM     CountryISOCode1 = 37
	CountryISOCode1_CMR     CountryISOCode1 = 38
	CountryISOCode1_CAN     CountryISOCode1 = 39
	CountryISOCode1_CPV     CountryISOCode1 = 40
	CountryISOCode1_CYM     CountryISOCode1 = 41
	CountryISOCode1_CAF     CountryISOCode1 = 42
	CountryISOCode1_TCD     CountryISOCode1 = 43
	CountryISOCode1_CHL     CountryISOCode1 = 44
	CountryISOCode1_CHN     CountryISOCode1 = 45
	CountryISOCode1_CXR     CountryISOCode1 = 46
	CountryISOCode1_CCK     CountryISOCode1 = 47
	CountryISOCode1_COL     CountryISOCode1 = 48
	CountryISOCode1_COM     CountryISOCode1 = 49
	CountryISOCode1_COG     CountryISOCode1 = 50
	CountryISOCode1_COD     CountryISOCode1 = 51
	CountryISOCode1_COK     CountryISOCode1 = 52
	CountryISOCode1_CRI     CountryISOCode1 = 53
	CountryISOCode1_HRV     CountryISOCode1 = 54
	CountryISOCode1_CUB     CountryISOCode1 = 55
	CountryISOCode1_CUW     CountryISOCode1 = 56
	CountryISOCode1_CYP     CountryISOCode1 = 57
	CountryISOCode1_CZE     CountryISOCode1 = 58
	CountryISOCode1_DNK     CountryISOCode1 = 59
	CountryISOCode1_DJI     CountryISOCode1 = 60
	CountryISOCode1_DMA     CountryISOCode1 = 61
	CountryISOCode1_DOM     CountryISOCode1 = 62
	CountryISOCode1_TLS     CountryISOCode1 = 63
	CountryISOCode1_ECU     CountryISOCode1 = 64
	CountryISOCode1_EGY     CountryISOCode1 = 65
	CountryISOCode1_SLV     CountryISOCode1 = 66
	CountryISOCode1_GNQ     CountryISOCode1 = 67
	CountryISOCode1_ERI     CountryISOCode1 = 68
	CountryISOCode1_EST     CountryISOCode1 = 69
	CountryISOCode1_ETH     CountryISOCode1 = 70
	CountryISOCode1_FLK     CountryISOCode1 = 71
	CountryISOCode1_FRO     CountryISOCode1 = 72
	CountryISOCode1_FJI     CountryISOCode1 = 73
	CountryISOCode1_FIN     CountryISOCode1 = 74
	CountryISOCode1_FRA     CountryISOCode1 = 75
	CountryISOCode1_PYF     CountryISOCode1 = 76
	CountryISOCode1_GAB     CountryISOCode1 = 77
	CountryISOCode1_GMB     CountryISOCode1 = 78
	CountryISOCode1_GEO     CountryISOCode1 = 79
	CountryISOCode1_DEU     CountryISOCode1 = 80
	CountryISOCode1_GHA     CountryISOCode1 = 81
	CountryISOCode1_GIB     CountryISOCode1 = 82
	CountryISOCode1_GRC     CountryISOCode1 = 83
	CountryISOCode1_GRL     CountryISOCode1 = 84
	CountryISOCode1_GRD     CountryISOCode1 = 85
	CountryISOCode1_GUM     CountryISOCode1 = 86
	CountryISOCode1_GTM     CountryISOCode1 = 87
	CountryISOCode1_GGY     CountryISOCode1 = 88
	CountryISOCode1_GIN     CountryISOCode1 = 89
	CountryISOCode1_GNB     CountryISOCode1 = 90
	CountryISOCode1_GUY     CountryISOCode1 = 91
	CountryISOCode1_HTI     CountryISOCode1 = 92
	CountryISOCode1_HND     CountryISOCode1 = 93
	CountryISOCode1_HKG     CountryISOCode1 = 94
	CountryISOCode1_HUN     CountryISOCode1 = 95
	CountryISOCode1_ISL     CountryISOCode1 = 96
	CountryISOCode1_IND     CountryISOCode1 = 97
	CountryISOCode1_IDN     CountryISOCode1 = 98
	CountryISOCode1_IRN     CountryISOCode1 = 99
	CountryISOCode1_IRQ     CountryISOCode1 = 100
	CountryISOCode1_IRL     CountryISOCode1 = 101
	CountryISOCode1_IMN     CountryISOCode1 = 102
	CountryISOCode1_ISR     CountryISOCode1 = 103
	CountryISOCode1_ITA     CountryISOCode1 = 104
	CountryISOCode1_CIV     CountryISOCode1 = 105
	CountryISOCode1_JAM     CountryISOCode1 = 106
	CountryISOCode1_JPN     CountryISOCode1 = 107
	CountryISOCode1_JEY     CountryISOCode1 = 108
	CountryISOCode1_JOR     CountryISOCode1 = 109
	CountryISOCode1_KAZ     CountryISOCode1 = 110
	CountryISOCode1_KEN     CountryISOCode1 = 111
	CountryISOCode1_KIR     CountryISOCode1 = 112
	CountryISOCode1_XKX     CountryISOCode1 = 113
	CountryISOCode1_KWT     CountryISOCode1 = 114
	CountryISOCode1_KGZ     CountryISOCode1 = 115
	CountryISOCode1_LAO     CountryISOCode1 = 116
	CountryISOCode1_LVA     CountryISOCode1 = 117
	CountryISOCode1_LBN     CountryISOCode1 = 118
	CountryISOCode1_LSO     CountryISOCode1 = 119
	CountryISOCode1_LBR     CountryISOCode1 = 120
	CountryISOCode1_LBY     CountryISOCode1 = 121
	CountryISOCode1_LIE     CountryISOCode1 = 122
	CountryISOCode1_LTU     CountryISOCode1 = 123
	CountryISOCode1_LUX     CountryISOCode1 = 124
	CountryISOCode1_MAC     CountryISOCode1 = 125
	CountryISOCode1_MKD     CountryISOCode1 = 126
	CountryISOCode1_MDG     CountryISOCode1 = 127
	CountryISOCode1_MWI     CountryISOCode1 = 128
	CountryISOCode1_MYS     CountryISOCode1 = 129
	CountryISOCode1_MDV     CountryISOCode1 = 130
	CountryISOCode1_MLI     CountryISOCode1 = 131
	CountryISOCode1_MLT     CountryISOCode1 = 132
	CountryISOCode1_MHL     CountryISOCode1 = 133
	CountryISOCode1_MRT     CountryISOCode1 = 134
	CountryISOCode1_MUS     CountryISOCode1 = 135
	CountryISOCode1_MYT     CountryISOCode1 = 136
	CountryISOCode1_MEX     CountryISOCode1 = 137
	CountryISOCode1_FSM     CountryISOCode1 = 138
	CountryISOCode1_MDA     CountryISOCode1 = 139
	CountryISOCode1_MCO     CountryISOCode1 = 140
	CountryISOCode1_MNG     CountryISOCode1 = 141
	CountryISOCode1_MNE     CountryISOCode1 = 142
	CountryISOCode1_MSR     CountryISOCode1 = 143
	CountryISOCode1_MAR     CountryISOCode1 = 144
	CountryISOCode1_MOZ     CountryISOCode1 = 145
	CountryISOCode1_NAM     CountryISOCode1 = 146
	CountryISOCode1_NRU     CountryISOCode1 = 147
	CountryISOCode1_NPL     CountryISOCode1 = 148
	CountryISOCode1_NLD     CountryISOCode1 = 149
	CountryISOCode1_ANT     CountryISOCode1 = 150
	CountryISOCode1_NCL     CountryISOCode1 = 151
	CountryISOCode1_NZL     CountryISOCode1 = 152
	CountryISOCode1_NIC     CountryISOCode1 = 153
	CountryISOCode1_NER     CountryISOCode1 = 154
	CountryISOCode1_NGA     CountryISOCode1 = 155
	CountryISOCode1_NIU     CountryISOCode1 = 156
	CountryISOCode1_MNP     CountryISOCode1 = 157
	CountryISOCode1_PRK     CountryISOCode1 = 158
	CountryISOCode1_NOR     CountryISOCode1 = 159
	CountryISOCode1_OMN     CountryISOCode1 = 160
	CountryISOCode1_PAK     CountryISOCode1 = 161
	CountryISOCode1_PLW     CountryISOCode1 = 162
	CountryISOCode1_PSE     CountryISOCode1 = 163
	CountryISOCode1_PAN     CountryISOCode1 = 164
	CountryISOCode1_PNG     CountryISOCode1 = 165
	CountryISOCode1_PRY     CountryISOCode1 = 166
	CountryISOCode1_PER     CountryISOCode1 = 167
	CountryISOCode1_PHL     CountryISOCode1 = 168
	CountryISOCode1_PCN     CountryISOCode1 = 169
	CountryISOCode1_POL     CountryISOCode1 = 170
	CountryISOCode1_PRT     CountryISOCode1 = 171
	CountryISOCode1_PRI     CountryISOCode1 = 172
	CountryISOCode1_QAT     CountryISOCode1 = 173
	CountryISOCode1_REU     CountryISOCode1 = 174
	CountryISOCode1_ROU     CountryISOCode1 = 175
	CountryISOCode1_RUS     CountryISOCode1 = 176
	CountryISOCode1_RWA     CountryISOCode1 = 177
	CountryISOCode1_BLM     CountryISOCode1 = 178
	CountryISOCode1_WSM     CountryISOCode1 = 179
	CountryISOCode1_SMR     CountryISOCode1 = 180
	CountryISOCode1_STP     CountryISOCode1 = 181
	CountryISOCode1_SAU     CountryISOCode1 = 182
	CountryISOCode1_SEN     CountryISOCode1 = 183
	CountryISOCode1_SRB     CountryISOCode1 = 184
	CountryISOCode1_SYC     CountryISOCode1 = 185
	CountryISOCode1_SLE     CountryISOCode1 = 186
	CountryISOCode1_SGP     CountryISOCode1 = 187
	CountryISOCode1_SXM     CountryISOCode1 = 188
	CountryISOCode1_SVK     CountryISOCode1 = 189
	CountryISOCode1_SVN     CountryISOCode1 = 190
	CountryISOCode1_SLB     CountryISOCode1 = 191
	CountryISOCode1_SOM     CountryISOCode1 = 192
	CountryISOCode1_ZAF     CountryISOCode1 = 193
	CountryISOCode1_KOR     CountryISOCode1 = 194
	CountryISOCode1_SSD     CountryISOCode1 = 195
	CountryISOCode1_ESP     CountryISOCode1 = 196
	CountryISOCode1_LKA     CountryISOCode1 = 197
	CountryISOCode1_SHN     CountryISOCode1 = 198
	CountryISOCode1_KNA     CountryISOCode1 = 199
	CountryISOCode1_LCA     CountryISOCode1 = 200
	CountryISOCode1_MAF     CountryISOCode1 = 201
	CountryISOCode1_SPM     CountryISOCode1 = 202
	CountryISOCode1_VCT     CountryISOCode1 = 203
	CountryISOCode1_SDN     CountryISOCode1 = 204
	CountryISOCode1_SUR     CountryISOCode1 = 205
	CountryISOCode1_SJM     CountryISOCode1 = 206
	CountryISOCode1_SWZ     CountryISOCode1 = 207
	CountryISOCode1_SWE     CountryISOCode1 = 208
	CountryISOCode1_CHE     CountryISOCode1 = 209
	CountryISOCode1_SYR     CountryISOCode1 = 210
	CountryISOCode1_TWN     CountryISOCode1 = 211
	CountryISOCode1_TJK     CountryISOCode1 = 212
	CountryISOCode1_TZA     CountryISOCode1 = 213
	CountryISOCode1_THA     CountryISOCode1 = 214
	CountryISOCode1_TGO     CountryISOCode1 = 215
	CountryISOCode1_TKL     CountryISOCode1 = 216
	CountryISOCode1_TON     CountryISOCode1 = 217
	CountryISOCode1_TTO     CountryISOCode1 = 218
	CountryISOCode1_TUN     CountryISOCode1 = 219
	CountryISOCode1_TUR     CountryISOCode1 = 220
	CountryISOCode1_TKM     CountryISOCode1 = 221
	CountryISOCode1_TCA     CountryISOCode1 = 222
	CountryISOCode1_TUV     CountryISOCode1 = 223
	CountryISOCode1_ARE     CountryISOCode1 = 224
	CountryISOCode1_UGA     CountryISOCode1 = 225
	CountryISOCode1_GBR     CountryISOCode1 = 226
	CountryISOCode1_UKR     CountryISOCode1 = 227
	CountryISOCode1_URY     CountryISOCode1 = 228
	CountryISOCode1_USA     CountryISOCode1 = 229
	CountryISOCode1_UZB     CountryISOCode1 = 230
	CountryISOCode1_VUT     CountryISOCode1 = 231
	CountryISOCode1_VAT     CountryISOCode1 = 232
	CountryISOCode1_VEN     CountryISOCode1 = 233
	CountryISOCode1_VNM     CountryISOCode1 = 234
	CountryISOCode1_VIR     CountryISOCode1 = 235
	CountryISOCode1_WLF     CountryISOCode1 = 236
	CountryISOCode1_ESH     CountryISOCode1 = 237
	CountryISOCode1_YEM     CountryISOCode1 = 238
	CountryISOCode1_ZMB     CountryISOCode1 = 239
	CountryISOCode1_ZWE     CountryISOCode1 = 240
)

// Enum value maps for CountryISOCode1.
var (
	CountryISOCode1_name = map[int32]string{
		0:   "UNKNOWN",
		1:   "AFG",
		2:   "ALB",
		3:   "DZA",
		4:   "ASM",
		5:   "AND",
		6:   "AGO",
		7:   "AIA",
		8:   "ATA",
		9:   "ATG",
		10:  "ARG",
		11:  "ARM",
		12:  "ABW",
		13:  "AUS",
		14:  "AUT",
		15:  "AZE",
		16:  "BHS",
		17:  "BHR",
		18:  "BGD",
		19:  "BRB",
		20:  "BLR",
		21:  "BEL",
		22:  "BLZ",
		23:  "BEN",
		24:  "BMU",
		25:  "BTN",
		26:  "BOL",
		27:  "BIH",
		28:  "BWA",
		29:  "BRA",
		30:  "IOT",
		31:  "VGB",
		32:  "BRN",
		33:  "BGR",
		34:  "BFA",
		35:  "MMR",
		36:  "BDI",
		37:  "KHM",
		38:  "CMR",
		39:  "CAN",
		40:  "CPV",
		41:  "CYM",
		42:  "CAF",
		43:  "TCD",
		44:  "CHL",
		45:  "CHN",
		46:  "CXR",
		47:  "CCK",
		48:  "COL",
		49:  "COM",
		50:  "COG",
		51:  "COD",
		52:  "COK",
		53:  "CRI",
		54:  "HRV",
		55:  "CUB",
		56:  "CUW",
		57:  "CYP",
		58:  "CZE",
		59:  "DNK",
		60:  "DJI",
		61:  "DMA",
		62:  "DOM",
		63:  "TLS",
		64:  "ECU",
		65:  "EGY",
		66:  "SLV",
		67:  "GNQ",
		68:  "ERI",
		69:  "EST",
		70:  "ETH",
		71:  "FLK",
		72:  "FRO",
		73:  "FJI",
		74:  "FIN",
		75:  "FRA",
		76:  "PYF",
		77:  "GAB",
		78:  "GMB",
		79:  "GEO",
		80:  "DEU",
		81:  "GHA",
		82:  "GIB",
		83:  "GRC",
		84:  "GRL",
		85:  "GRD",
		86:  "GUM",
		87:  "GTM",
		88:  "GGY",
		89:  "GIN",
		90:  "GNB",
		91:  "GUY",
		92:  "HTI",
		93:  "HND",
		94:  "HKG",
		95:  "HUN",
		96:  "ISL",
		97:  "IND",
		98:  "IDN",
		99:  "IRN",
		100: "IRQ",
		101: "IRL",
		102: "IMN",
		103: "ISR",
		104: "ITA",
		105: "CIV",
		106: "JAM",
		107: "JPN",
		108: "JEY",
		109: "JOR",
		110: "KAZ",
		111: "KEN",
		112: "KIR",
		113: "XKX",
		114: "KWT",
		115: "KGZ",
		116: "LAO",
		117: "LVA",
		118: "LBN",
		119: "LSO",
		120: "LBR",
		121: "LBY",
		122: "LIE",
		123: "LTU",
		124: "LUX",
		125: "MAC",
		126: "MKD",
		127: "MDG",
		128: "MWI",
		129: "MYS",
		130: "MDV",
		131: "MLI",
		132: "MLT",
		133: "MHL",
		134: "MRT",
		135: "MUS",
		136: "MYT",
		137: "MEX",
		138: "FSM",
		139: "MDA",
		140: "MCO",
		141: "MNG",
		142: "MNE",
		143: "MSR",
		144: "MAR",
		145: "MOZ",
		146: "NAM",
		147: "NRU",
		148: "NPL",
		149: "NLD",
		150: "ANT",
		151: "NCL",
		152: "NZL",
		153: "NIC",
		154: "NER",
		155: "NGA",
		156: "NIU",
		157: "MNP",
		158: "PRK",
		159: "NOR",
		160: "OMN",
		161: "PAK",
		162: "PLW",
		163: "PSE",
		164: "PAN",
		165: "PNG",
		166: "PRY",
		167: "PER",
		168: "PHL",
		169: "PCN",
		170: "POL",
		171: "PRT",
		172: "PRI",
		173: "QAT",
		174: "REU",
		175: "ROU",
		176: "RUS",
		177: "RWA",
		178: "BLM",
		179: "WSM",
		180: "SMR",
		181: "STP",
		182: "SAU",
		183: "SEN",
		184: "SRB",
		185: "SYC",
		186: "SLE",
		187: "SGP",
		188: "SXM",
		189: "SVK",
		190: "SVN",
		191: "SLB",
		192: "SOM",
		193: "ZAF",
		194: "KOR",
		195: "SSD",
		196: "ESP",
		197: "LKA",
		198: "SHN",
		199: "KNA",
		200: "LCA",
		201: "MAF",
		202: "SPM",
		203: "VCT",
		204: "SDN",
		205: "SUR",
		206: "SJM",
		207: "SWZ",
		208: "SWE",
		209: "CHE",
		210: "SYR",
		211: "TWN",
		212: "TJK",
		213: "TZA",
		214: "THA",
		215: "TGO",
		216: "TKL",
		217: "TON",
		218: "TTO",
		219: "TUN",
		220: "TUR",
		221: "TKM",
		222: "TCA",
		223: "TUV",
		224: "ARE",
		225: "UGA",
		226: "GBR",
		227: "UKR",
		228: "URY",
		229: "USA",
		230: "UZB",
		231: "VUT",
		232: "VAT",
		233: "VEN",
		234: "VNM",
		235: "VIR",
		236: "WLF",
		237: "ESH",
		238: "YEM",
		239: "ZMB",
		240: "ZWE",
	}
	CountryISOCode1_value = map[string]int32{
		"UNKNOWN": 0,
		"AFG":     1,
		"ALB":     2,
		"DZA":     3,
		"ASM":     4,
		"AND":     5,
		"AGO":     6,
		"AIA":     7,
		"ATA":     8,
		"ATG":     9,
		"ARG":     10,
		"ARM":     11,
		"ABW":     12,
		"AUS":     13,
		"AUT":     14,
		"AZE":     15,
		"BHS":     16,
		"BHR":     17,
		"BGD":     18,
		"BRB":     19,
		"BLR":     20,
		"BEL":     21,
		"BLZ":     22,
		"BEN":     23,
		"BMU":     24,
		"BTN":     25,
		"BOL":     26,
		"BIH":     27,
		"BWA":     28,
		"BRA":     29,
		"IOT":     30,
		"VGB":     31,
		"BRN":     32,
		"BGR":     33,
		"BFA":     34,
		"MMR":     35,
		"BDI":     36,
		"KHM":     37,
		"CMR":     38,
		"CAN":     39,
		"CPV":     40,
		"CYM":     41,
		"CAF":     42,
		"TCD":     43,
		"CHL":     44,
		"CHN":     45,
		"CXR":     46,
		"CCK":     47,
		"COL":     48,
		"COM":     49,
		"COG":     50,
		"COD":     51,
		"COK":     52,
		"CRI":     53,
		"HRV":     54,
		"CUB":     55,
		"CUW":     56,
		"CYP":     57,
		"CZE":     58,
		"DNK":     59,
		"DJI":     60,
		"DMA":     61,
		"DOM":     62,
		"TLS":     63,
		"ECU":     64,
		"EGY":     65,
		"SLV":     66,
		"GNQ":     67,
		"ERI":     68,
		"EST":     69,
		"ETH":     70,
		"FLK":     71,
		"FRO":     72,
		"FJI":     73,
		"FIN":     74,
		"FRA":     75,
		"PYF":     76,
		"GAB":     77,
		"GMB":     78,
		"GEO":     79,
		"DEU":     80,
		"GHA":     81,
		"GIB":     82,
		"GRC":     83,
		"GRL":     84,
		"GRD":     85,
		"GUM":     86,
		"GTM":     87,
		"GGY":     88,
		"GIN":     89,
		"GNB":     90,
		"GUY":     91,
		"HTI":     92,
		"HND":     93,
		"HKG":     94,
		"HUN":     95,
		"ISL":     96,
		"IND":     97,
		"IDN":     98,
		"IRN":     99,
		"IRQ":     100,
		"IRL":     101,
		"IMN":     102,
		"ISR":     103,
		"ITA":     104,
		"CIV":     105,
		"JAM":     106,
		"JPN":     107,
		"JEY":     108,
		"JOR":     109,
		"KAZ":     110,
		"KEN":     111,
		"KIR":     112,
		"XKX":     113,
		"KWT":     114,
		"KGZ":     115,
		"LAO":     116,
		"LVA":     117,
		"LBN":     118,
		"LSO":     119,
		"LBR":     120,
		"LBY":     121,
		"LIE":     122,
		"LTU":     123,
		"LUX":     124,
		"MAC":     125,
		"MKD":     126,
		"MDG":     127,
		"MWI":     128,
		"MYS":     129,
		"MDV":     130,
		"MLI":     131,
		"MLT":     132,
		"MHL":     133,
		"MRT":     134,
		"MUS":     135,
		"MYT":     136,
		"MEX":     137,
		"FSM":     138,
		"MDA":     139,
		"MCO":     140,
		"MNG":     141,
		"MNE":     142,
		"MSR":     143,
		"MAR":     144,
		"MOZ":     145,
		"NAM":     146,
		"NRU":     147,
		"NPL":     148,
		"NLD":     149,
		"ANT":     150,
		"NCL":     151,
		"NZL":     152,
		"NIC":     153,
		"NER":     154,
		"NGA":     155,
		"NIU":     156,
		"MNP":     157,
		"PRK":     158,
		"NOR":     159,
		"OMN":     160,
		"PAK":     161,
		"PLW":     162,
		"PSE":     163,
		"PAN":     164,
		"PNG":     165,
		"PRY":     166,
		"PER":     167,
		"PHL":     168,
		"PCN":     169,
		"POL":     170,
		"PRT":     171,
		"PRI":     172,
		"QAT":     173,
		"REU":     174,
		"ROU":     175,
		"RUS":     176,
		"RWA":     177,
		"BLM":     178,
		"WSM":     179,
		"SMR":     180,
		"STP":     181,
		"SAU":     182,
		"SEN":     183,
		"SRB":     184,
		"SYC":     185,
		"SLE":     186,
		"SGP":     187,
		"SXM":     188,
		"SVK":     189,
		"SVN":     190,
		"SLB":     191,
		"SOM":     192,
		"ZAF":     193,
		"KOR":     194,
		"SSD":     195,
		"ESP":     196,
		"LKA":     197,
		"SHN":     198,
		"KNA":     199,
		"LCA":     200,
		"MAF":     201,
		"SPM":     202,
		"VCT":     203,
		"SDN":     204,
		"SUR":     205,
		"SJM":     206,
		"SWZ":     207,
		"SWE":     208,
		"CHE":     209,
		"SYR":     210,
		"TWN":     211,
		"TJK":     212,
		"TZA":     213,
		"THA":     214,
		"TGO":     215,
		"TKL":     216,
		"TON":     217,
		"TTO":     218,
		"TUN":     219,
		"TUR":     220,
		"TKM":     221,
		"TCA":     222,
		"TUV":     223,
		"ARE":     224,
		"UGA":     225,
		"GBR":     226,
		"UKR":     227,
		"URY":     228,
		"USA":     229,
		"UZB":     230,
		"VUT":     231,
		"VAT":     232,
		"VEN":     233,
		"VNM":     234,
		"VIR":     235,
		"WLF":     236,
		"ESH":     237,
		"YEM":     238,
		"ZMB":     239,
		"ZWE":     240,
	}
)

func (x CountryISOCode1) Enum() *CountryISOCode1 {
	p := new(CountryISOCode1)
	*p = x
	return p
}

func (x CountryISOCode1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CountryISOCode1) Descriptor() protoreflect.EnumDescriptor {
	return file_user_country_proto_enumTypes[2].Descriptor()
}

func (CountryISOCode1) Type() protoreflect.EnumType {
	return &file_user_country_proto_enumTypes[2]
}

func (x CountryISOCode1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CountryISOCode1.Descriptor instead.
func (CountryISOCode1) EnumDescriptor() ([]byte, []int) {
	return file_user_country_proto_rawDescGZIP(), []int{2}
}

var File_user_country_proto protoreflect.FileDescriptor

var file_user_country_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73, 0x65, 0x72, 0x2a, 0xe9, 0x01, 0x0a, 0x0c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x53, 0x44,
	0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x42, 0x50, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x48,
	0x4b, 0x44, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0x05, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x47, 0x44, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x4b, 0x10, 0x07, 0x12,
	0x07, 0x0a, 0x03, 0x44, 0x4b, 0x4b, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4f, 0x4b, 0x10,
	0x09, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x50, 0x59, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41,
	0x44, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x55, 0x44, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x55, 0x52, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4f, 0x50, 0x10, 0x0e, 0x12, 0x07,
	0x0a, 0x03, 0x50, 0x48, 0x50, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x48, 0x42, 0x10, 0x10,
	0x12, 0x07, 0x0a, 0x03, 0x4e, 0x5a, 0x44, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x52, 0x57,
	0x10, 0x12, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x55, 0x42, 0x10, 0x13, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x59, 0x52, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x57, 0x44, 0x10, 0x15, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x4e, 0x52, 0x10, 0x16, 0x2a, 0x8e, 0x10, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x49, 0x53, 0x4f, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x46, 0x10, 0x01, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x5a, 0x10, 0x03, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x53, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x44, 0x10, 0x05, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x4f, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x49, 0x10, 0x07, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x51, 0x10, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x47, 0x10, 0x09, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x52, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x4d, 0x10, 0x0b, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x57, 0x10, 0x0c, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x55, 0x10, 0x0d, 0x12, 0x06,
	0x0a, 0x02, 0x41, 0x54, 0x10, 0x0e, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x5a, 0x10, 0x0f, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x53, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x48, 0x10, 0x11, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x44, 0x10, 0x12, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x42, 0x10, 0x13, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x59, 0x10, 0x14, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x45, 0x10, 0x15, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x5a, 0x10, 0x16, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x4a, 0x10, 0x17, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x4d, 0x10, 0x18, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x54, 0x10, 0x19, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x4f, 0x10, 0x1a, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x41, 0x10, 0x1b, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x57, 0x10, 0x1c, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x52, 0x10, 0x1d, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x4f, 0x10, 0x1e, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x47, 0x10, 0x1f, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x4e, 0x10, 0x20, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x47, 0x10, 0x21, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x46, 0x10, 0x22, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x4d, 0x10, 0x23, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x49, 0x10, 0x24, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x48, 0x10, 0x25, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x4d, 0x10, 0x26, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x41, 0x10, 0x27, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x56, 0x10, 0x28, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x59, 0x10, 0x29, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x46, 0x10, 0x2a, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x44, 0x10, 0x2b, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x4c, 0x10, 0x2c, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x4e, 0x10, 0x2d, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x58, 0x10, 0x2e, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x43, 0x10, 0x2f, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x4f, 0x10, 0x30, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x4d, 0x10, 0x31, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x47, 0x10, 0x32, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x44, 0x10, 0x33, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x4b, 0x10, 0x34, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x52, 0x10, 0x35, 0x12, 0x06,
	0x0a, 0x02, 0x48, 0x52, 0x10, 0x36, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x55, 0x10, 0x37, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x57, 0x10, 0x38, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x59, 0x10, 0x39, 0x12, 0x06,
	0x0a, 0x02, 0x43, 0x5a, 0x10, 0x3a, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x4b, 0x10, 0x3b, 0x12, 0x06,
	0x0a, 0x02, 0x44, 0x4a, 0x10, 0x3c, 0x12, 0x06, 0x0a, 0x02, 0x44, 0x4d, 0x10, 0x3d, 0x12, 0x06,
	0x0a, 0x02, 0x44, 0x4f, 0x10, 0x3e, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x4c, 0x10, 0x3f, 0x12, 0x06,
	0x0a, 0x02, 0x45, 0x43, 0x10, 0x40, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x47, 0x10, 0x41, 0x12, 0x06,
	0x0a, 0x02, 0x53, 0x56, 0x10, 0x42, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x51, 0x10, 0x43, 0x12, 0x06,
	0x0a, 0x02, 0x45, 0x52, 0x10, 0x44, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x45, 0x10, 0x45, 0x12, 0x06,
	0x0a, 0x02, 0x45, 0x54, 0x10, 0x46, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x4b, 0x10, 0x47, 0x12, 0x06,
	0x0a, 0x02, 0x46, 0x4f, 0x10, 0x48, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x4a, 0x10, 0x49, 0x12, 0x06,
	0x0a, 0x02, 0x46, 0x49, 0x10, 0x4a, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x52, 0x10, 0x4b, 0x12, 0x06,
	0x0a, 0x02, 0x50, 0x46, 0x10, 0x4c, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x41, 0x10, 0x4d, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x4d, 0x10, 0x4e, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x45, 0x10, 0x4f, 0x12, 0x06,
	0x0a, 0x02, 0x44, 0x45, 0x10, 0x50, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x48, 0x10, 0x51, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x49, 0x10, 0x52, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x52, 0x10, 0x53, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x4c, 0x10, 0x54, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x44, 0x10, 0x55, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x55, 0x10, 0x56, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x57, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x47, 0x10, 0x58, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4e, 0x10, 0x59, 0x12, 0x06,
	0x0a, 0x02, 0x47, 0x57, 0x10, 0x5a, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x59, 0x10, 0x5b, 0x12, 0x06,
	0x0a, 0x02, 0x48, 0x54, 0x10, 0x5c, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x4e, 0x10, 0x5d, 0x12, 0x06,
	0x0a, 0x02, 0x48, 0x4b, 0x10, 0x5e, 0x12, 0x06, 0x0a, 0x02, 0x48, 0x55, 0x10, 0x5f, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x53, 0x10, 0x60, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10, 0x61, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x44, 0x10, 0x62, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x52, 0x10, 0x63, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x51, 0x10, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x45, 0x10, 0x65, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x4d, 0x10, 0x66, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4c, 0x10, 0x67, 0x12, 0x06,
	0x0a, 0x02, 0x49, 0x54, 0x10, 0x68, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x49, 0x10, 0x69, 0x12, 0x06,
	0x0a, 0x02, 0x4a, 0x4d, 0x10, 0x6a, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x50, 0x10, 0x6b, 0x12, 0x06,
	0x0a, 0x02, 0x4a, 0x45, 0x10, 0x6c, 0x12, 0x06, 0x0a, 0x02, 0x4a, 0x4f, 0x10, 0x6d, 0x12, 0x06,
	0x0a, 0x02, 0x4b, 0x5a, 0x10, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x45, 0x10, 0x6f, 0x12, 0x06,
	0x0a, 0x02, 0x4b, 0x49, 0x10, 0x70, 0x12, 0x06, 0x0a, 0x02, 0x58, 0x4b, 0x10, 0x71, 0x12, 0x06,
	0x0a, 0x02, 0x4b, 0x57, 0x10, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x4b, 0x47, 0x10, 0x73, 0x12, 0x06,
	0x0a, 0x02, 0x4c, 0x41, 0x10, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x56, 0x10, 0x75, 0x12, 0x06,
	0x0a, 0x02, 0x4c, 0x42, 0x10, 0x76, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x53, 0x10, 0x77, 0x12, 0x06,
	0x0a, 0x02, 0x4c, 0x52, 0x10, 0x78, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x59, 0x10, 0x79, 0x12, 0x06,
	0x0a, 0x02, 0x4c, 0x49, 0x10, 0x7a, 0x12, 0x06, 0x0a, 0x02, 0x4c, 0x54, 0x10, 0x7b, 0x12, 0x06,
	0x0a, 0x02, 0x4c, 0x55, 0x10, 0x7c, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x4f, 0x10, 0x7d, 0x12, 0x06,
	0x0a, 0x02, 0x4d, 0x4b, 0x10, 0x7e, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x47, 0x10, 0x7f, 0x12, 0x07,
	0x0a, 0x02, 0x4d, 0x57, 0x10, 0x80, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x59, 0x10, 0x81, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x4d, 0x56, 0x10, 0x82, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x4c, 0x10,
	0x83, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x54, 0x10, 0x84, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d,
	0x48, 0x10, 0x85, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x52, 0x10, 0x86, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x4d, 0x55, 0x10, 0x87, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x59, 0x54, 0x10, 0x88, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x4d, 0x58, 0x10, 0x89, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x46, 0x4d, 0x10, 0x8a,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x44, 0x10, 0x8b, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x43,
	0x10, 0x8c, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x4e, 0x10, 0x8d, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x4d, 0x45, 0x10, 0x8e, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x53, 0x10, 0x8f, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x4d, 0x41, 0x10, 0x90, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x5a, 0x10, 0x91, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x4e, 0x41, 0x10, 0x92, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x52, 0x10,
	0x93, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x50, 0x10, 0x94, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e,
	0x4c, 0x10, 0x95, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x41, 0x4e, 0x10, 0x96, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x4e, 0x43, 0x10, 0x97, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x5a, 0x10, 0x98, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x4e, 0x49, 0x10, 0x99, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x45, 0x10, 0x9a,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x47, 0x10, 0x9b, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x55,
	0x10, 0x9c, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4d, 0x50, 0x10, 0x9d, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x4b, 0x50, 0x10, 0x9e, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x9f, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x4f, 0x4d, 0x10, 0xa0, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4b, 0x10, 0xa1, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x50, 0x57, 0x10, 0xa2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x53, 0x10,
	0xa3, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x41, 0x10, 0xa4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50,
	0x47, 0x10, 0xa5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x59, 0x10, 0xa6, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x50, 0x45, 0x10, 0xa7, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x48, 0x10, 0xa8, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x50, 0x4e, 0x10, 0xa9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4c, 0x10, 0xaa,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x54, 0x10, 0xab, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x52,
	0x10, 0xac, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x51, 0x41, 0x10, 0xad, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x52, 0x45, 0x10, 0xae, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x4f, 0x10, 0xaf, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x52, 0x55, 0x10, 0xb0, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x57, 0x10, 0xb1, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x42, 0x4c, 0x10, 0xb2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x57, 0x53, 0x10,
	0xb3, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4d, 0x10, 0xb4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53,
	0x54, 0x10, 0xb5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x41, 0x10, 0xb6, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x53, 0x4e, 0x10, 0xb7, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x52, 0x53, 0x10, 0xb8, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x53, 0x43, 0x10, 0xb9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4c, 0x10, 0xba,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x47, 0x10, 0xbb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x58,
	0x10, 0xbc, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x4b, 0x10, 0xbd, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x53, 0x49, 0x10, 0xbe, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x42, 0x10, 0xbf, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x53, 0x4f, 0x10, 0xc0, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x5a, 0x41, 0x10, 0xc1, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x4b, 0x52, 0x10, 0xc2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x53, 0x10,
	0xc3, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x45, 0x53, 0x10, 0xc4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c,
	0x4b, 0x10, 0xc5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x48, 0x10, 0xc6, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x4b, 0x4e, 0x10, 0xc7, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x4c, 0x43, 0x10, 0xc8, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x4d, 0x46, 0x10, 0xc9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x50, 0x4d, 0x10, 0xca,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x43, 0x10, 0xcb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x44,
	0x10, 0xcc, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x52, 0x10, 0xcd, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x53, 0x4a, 0x10, 0xce, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x53, 0x5a, 0x10, 0xcf, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x53, 0x45, 0x10, 0xd0, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x43, 0x48, 0x10, 0xd1, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x53, 0x59, 0x10, 0xd2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x57, 0x10,
	0xd3, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4a, 0x10, 0xd4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54,
	0x5a, 0x10, 0xd5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x48, 0x10, 0xd6, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x54, 0x47, 0x10, 0xd7, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4b, 0x10, 0xd8, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x54, 0x4f, 0x10, 0xd9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x54, 0x10, 0xda,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4e, 0x10, 0xdb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x52,
	0x10, 0xdc, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x4d, 0x10, 0xdd, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x54, 0x43, 0x10, 0xde, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x54, 0x56, 0x10, 0xdf, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x41, 0x45, 0x10, 0xe0, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x47, 0x10, 0xe1, 0x01,
	0x12, 0x07, 0x0a, 0x02, 0x47, 0x42, 0x10, 0xe2, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x41, 0x10,
	0xe3, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x59, 0x10, 0xe4, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55,
	0x53, 0x10, 0xe5, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x55, 0x5a, 0x10, 0xe6, 0x01, 0x12, 0x07, 0x0a,
	0x02, 0x56, 0x55, 0x10, 0xe7, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x41, 0x10, 0xe8, 0x01, 0x12,
	0x07, 0x0a, 0x02, 0x56, 0x45, 0x10, 0xe9, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x4e, 0x10, 0xea,
	0x01, 0x12, 0x07, 0x0a, 0x02, 0x56, 0x49, 0x10, 0xeb, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x57, 0x46,
	0x10, 0xec, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x45, 0x48, 0x10, 0xed, 0x01, 0x12, 0x07, 0x0a, 0x02,
	0x59, 0x45, 0x10, 0xee, 0x01, 0x12, 0x07, 0x0a, 0x02, 0x5a, 0x4d, 0x10, 0xef, 0x01, 0x12, 0x07,
	0x0a, 0x02, 0x5a, 0x57, 0x10, 0xf0, 0x01, 0x2a, 0xff, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x53, 0x4f, 0x43, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x46, 0x47, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x42, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x5a,
	0x41, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x4d, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x47, 0x4f, 0x10, 0x06, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x49, 0x41, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x54, 0x41, 0x10, 0x08,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x54, 0x47, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x47,
	0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x4d, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x42, 0x57, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x55, 0x53, 0x10, 0x0d, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x55, 0x54, 0x10, 0x0e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x5a, 0x45, 0x10, 0x0f, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x48, 0x53, 0x10, 0x10, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x48, 0x52, 0x10,
	0x11, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x47, 0x44, 0x10, 0x12, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x52,
	0x42, 0x10, 0x13, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4c, 0x52, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x45, 0x4c, 0x10, 0x15, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4c, 0x5a, 0x10, 0x16, 0x12, 0x07,
	0x0a, 0x03, 0x42, 0x45, 0x4e, 0x10, 0x17, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4d, 0x55, 0x10, 0x18,
	0x12, 0x07, 0x0a, 0x03, 0x42, 0x54, 0x4e, 0x10, 0x19, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x4c,
	0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x49, 0x48, 0x10, 0x1b, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x57, 0x41, 0x10, 0x1c, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x52, 0x41, 0x10, 0x1d, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x4f, 0x54, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x47, 0x42, 0x10, 0x1f, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x52, 0x4e, 0x10, 0x20, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x47, 0x52, 0x10,
	0x21, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x46, 0x41, 0x10, 0x22, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4d,
	0x52, 0x10, 0x23, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x44, 0x49, 0x10, 0x24, 0x12, 0x07, 0x0a, 0x03,
	0x4b, 0x48, 0x4d, 0x10, 0x25, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4d, 0x52, 0x10, 0x26, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x41, 0x4e, 0x10, 0x27, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x50, 0x56, 0x10, 0x28,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x59, 0x4d, 0x10, 0x29, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x46,
	0x10, 0x2a, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x44, 0x10, 0x2b, 0x12, 0x07, 0x0a, 0x03, 0x43,
	0x48, 0x4c, 0x10, 0x2c, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x48, 0x4e, 0x10, 0x2d, 0x12, 0x07, 0x0a,
	0x03, 0x43, 0x58, 0x52, 0x10, 0x2e, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x43, 0x4b, 0x10, 0x2f, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x4f, 0x4c, 0x10, 0x30, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f, 0x4d, 0x10,
	0x31, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f, 0x47, 0x10, 0x32, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f,
	0x44, 0x10, 0x33, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4f, 0x4b, 0x10, 0x34, 0x12, 0x07, 0x0a, 0x03,
	0x43, 0x52, 0x49, 0x10, 0x35, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x52, 0x56, 0x10, 0x36, 0x12, 0x07,
	0x0a, 0x03, 0x43, 0x55, 0x42, 0x10, 0x37, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x55, 0x57, 0x10, 0x38,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x59, 0x50, 0x10, 0x39, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x5a, 0x45,
	0x10, 0x3a, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4e, 0x4b, 0x10, 0x3b, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x4a, 0x49, 0x10, 0x3c, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4d, 0x41, 0x10, 0x3d, 0x12, 0x07, 0x0a,
	0x03, 0x44, 0x4f, 0x4d, 0x10, 0x3e, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4c, 0x53, 0x10, 0x3f, 0x12,
	0x07, 0x0a, 0x03, 0x45, 0x43, 0x55, 0x10, 0x40, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x47, 0x59, 0x10,
	0x41, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x4c, 0x56, 0x10, 0x42, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4e,
	0x51, 0x10, 0x43, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x52, 0x49, 0x10, 0x44, 0x12, 0x07, 0x0a, 0x03,
	0x45, 0x53, 0x54, 0x10, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x54, 0x48, 0x10, 0x46, 0x12, 0x07,
	0x0a, 0x03, 0x46, 0x4c, 0x4b, 0x10, 0x47, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x52, 0x4f, 0x10, 0x48,
	0x12, 0x07, 0x0a, 0x03, 0x46, 0x4a, 0x49, 0x10, 0x49, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x49, 0x4e,
	0x10, 0x4a, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x52, 0x41, 0x10, 0x4b, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x59, 0x46, 0x10, 0x4c, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41, 0x42, 0x10, 0x4d, 0x12, 0x07, 0x0a,
	0x03, 0x47, 0x4d, 0x42, 0x10, 0x4e, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x4f, 0x10, 0x4f, 0x12,
	0x07, 0x0a, 0x03, 0x44, 0x45, 0x55, 0x10, 0x50, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x48, 0x41, 0x10,
	0x51, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x42, 0x10, 0x52, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x52,
	0x43, 0x10, 0x53, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x52, 0x4c, 0x10, 0x54, 0x12, 0x07, 0x0a, 0x03,
	0x47, 0x52, 0x44, 0x10, 0x55, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x55, 0x4d, 0x10, 0x56, 0x12, 0x07,
	0x0a, 0x03, 0x47, 0x54, 0x4d, 0x10, 0x57, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x47, 0x59, 0x10, 0x58,
	0x12, 0x07, 0x0a, 0x03, 0x47, 0x49, 0x4e, 0x10, 0x59, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4e, 0x42,
	0x10, 0x5a, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x55, 0x59, 0x10, 0x5b, 0x12, 0x07, 0x0a, 0x03, 0x48,
	0x54, 0x49, 0x10, 0x5c, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4e, 0x44, 0x10, 0x5d, 0x12, 0x07, 0x0a,
	0x03, 0x48, 0x4b, 0x47, 0x10, 0x5e, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x55, 0x4e, 0x10, 0x5f, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x53, 0x4c, 0x10, 0x60, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x44, 0x10,
	0x61, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x44, 0x4e, 0x10, 0x62, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x52,
	0x4e, 0x10, 0x63, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x52, 0x51, 0x10, 0x64, 0x12, 0x07, 0x0a, 0x03,
	0x49, 0x52, 0x4c, 0x10, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4d, 0x4e, 0x10, 0x66, 0x12, 0x07,
	0x0a, 0x03, 0x49, 0x53, 0x52, 0x10, 0x67, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x54, 0x41, 0x10, 0x68,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x49, 0x56, 0x10, 0x69, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x41, 0x4d,
	0x10, 0x6a, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x50, 0x4e, 0x10, 0x6b, 0x12, 0x07, 0x0a, 0x03, 0x4a,
	0x45, 0x59, 0x10, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f, 0x52, 0x10, 0x6d, 0x12, 0x07, 0x0a,
	0x03, 0x4b, 0x41, 0x5a, 0x10, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x45, 0x4e, 0x10, 0x6f, 0x12,
	0x07, 0x0a, 0x03, 0x4b, 0x49, 0x52, 0x10, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x4b, 0x58, 0x10,
	0x71, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x57, 0x54, 0x10, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x47,
	0x5a, 0x10, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x41, 0x4f, 0x10, 0x74, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x56, 0x41, 0x10, 0x75, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42, 0x4e, 0x10, 0x76, 0x12, 0x07,
	0x0a, 0x03, 0x4c, 0x53, 0x4f, 0x10, 0x77, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42, 0x52, 0x10, 0x78,
	0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42, 0x59, 0x10, 0x79, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x49, 0x45,
	0x10, 0x7a, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x54, 0x55, 0x10, 0x7b, 0x12, 0x07, 0x0a, 0x03, 0x4c,
	0x55, 0x58, 0x10, 0x7c, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x41, 0x43, 0x10, 0x7d, 0x12, 0x07, 0x0a,
	0x03, 0x4d, 0x4b, 0x44, 0x10, 0x7e, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x44, 0x47, 0x10, 0x7f, 0x12,
	0x08, 0x0a, 0x03, 0x4d, 0x57, 0x49, 0x10, 0x80, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x59, 0x53,
	0x10, 0x81, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x44, 0x56, 0x10, 0x82, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x4d, 0x4c, 0x49, 0x10, 0x83, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x4c, 0x54, 0x10, 0x84,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x48, 0x4c, 0x10, 0x85, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d,
	0x52, 0x54, 0x10, 0x86, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x55, 0x53, 0x10, 0x87, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x4d, 0x59, 0x54, 0x10, 0x88, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x45, 0x58,
	0x10, 0x89, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x46, 0x53, 0x4d, 0x10, 0x8a, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x4d, 0x44, 0x41, 0x10, 0x8b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x43, 0x4f, 0x10, 0x8c,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x4e, 0x47, 0x10, 0x8d, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d,
	0x4e, 0x45, 0x10, 0x8e, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x53, 0x52, 0x10, 0x8f, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x4d, 0x41, 0x52, 0x10, 0x90, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x4f, 0x5a,
	0x10, 0x91, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x41, 0x4d, 0x10, 0x92, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x4e, 0x52, 0x55, 0x10, 0x93, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x50, 0x4c, 0x10, 0x94,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x4c, 0x44, 0x10, 0x95, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x41,
	0x4e, 0x54, 0x10, 0x96, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x43, 0x4c, 0x10, 0x97, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x4e, 0x5a, 0x4c, 0x10, 0x98, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x49, 0x43,
	0x10, 0x99, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x45, 0x52, 0x10, 0x9a, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x4e, 0x47, 0x41, 0x10, 0x9b, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x49, 0x55, 0x10, 0x9c,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x4e, 0x50, 0x10, 0x9d, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50,
	0x52, 0x4b, 0x10, 0x9e, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x4f, 0x52, 0x10, 0x9f, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x4f, 0x4d, 0x4e, 0x10, 0xa0, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x41, 0x4b,
	0x10, 0xa1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x4c, 0x57, 0x10, 0xa2, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x50, 0x53, 0x45, 0x10, 0xa3, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x41, 0x4e, 0x10, 0xa4,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x4e, 0x47, 0x10, 0xa5, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50,
	0x52, 0x59, 0x10, 0xa6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x45, 0x52, 0x10, 0xa7, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x50, 0x48, 0x4c, 0x10, 0xa8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x43, 0x4e,
	0x10, 0xa9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x4f, 0x4c, 0x10, 0xaa, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x50, 0x52, 0x54, 0x10, 0xab, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x52, 0x49, 0x10, 0xac,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x51, 0x41, 0x54, 0x10, 0xad, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x52,
	0x45, 0x55, 0x10, 0xae, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x52, 0x4f, 0x55, 0x10, 0xaf, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x52, 0x55, 0x53, 0x10, 0xb0, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x52, 0x57, 0x41,
	0x10, 0xb1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x42, 0x4c, 0x4d, 0x10, 0xb2, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x57, 0x53, 0x4d, 0x10, 0xb3, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x4d, 0x52, 0x10, 0xb4,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x54, 0x50, 0x10, 0xb5, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x41, 0x55, 0x10, 0xb6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x45, 0x4e, 0x10, 0xb7, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x53, 0x52, 0x42, 0x10, 0xb8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x59, 0x43,
	0x10, 0xb9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x4c, 0x45, 0x10, 0xba, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x53, 0x47, 0x50, 0x10, 0xbb, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x58, 0x4d, 0x10, 0xbc,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x56, 0x4b, 0x10, 0xbd, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x56, 0x4e, 0x10, 0xbe, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x4c, 0x42, 0x10, 0xbf, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x53, 0x4f, 0x4d, 0x10, 0xc0, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x41, 0x46,
	0x10, 0xc1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x4f, 0x52, 0x10, 0xc2, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x53, 0x53, 0x44, 0x10, 0xc3, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x45, 0x53, 0x50, 0x10, 0xc4,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x4c, 0x4b, 0x41, 0x10, 0xc5, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x48, 0x4e, 0x10, 0xc6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x4e, 0x41, 0x10, 0xc7, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x4c, 0x43, 0x41, 0x10, 0xc8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x41, 0x46,
	0x10, 0xc9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x50, 0x4d, 0x10, 0xca, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x56, 0x43, 0x54, 0x10, 0xcb, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x44, 0x4e, 0x10, 0xcc,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x55, 0x52, 0x10, 0xcd, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x4a, 0x4d, 0x10, 0xce, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x57, 0x5a, 0x10, 0xcf, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x53, 0x57, 0x45, 0x10, 0xd0, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x48, 0x45,
	0x10, 0xd1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x59, 0x52, 0x10, 0xd2, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x54, 0x57, 0x4e, 0x10, 0xd3, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4a, 0x4b, 0x10, 0xd4,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x5a, 0x41, 0x10, 0xd5, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54,
	0x48, 0x41, 0x10, 0xd6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x47, 0x4f, 0x10, 0xd7, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x54, 0x4b, 0x4c, 0x10, 0xd8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4f, 0x4e,
	0x10, 0xd9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x54, 0x4f, 0x10, 0xda, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x54, 0x55, 0x4e, 0x10, 0xdb, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x55, 0x52, 0x10, 0xdc,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4b, 0x4d, 0x10, 0xdd, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54,
	0x43, 0x41, 0x10, 0xde, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x55, 0x56, 0x10, 0xdf, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x41, 0x52, 0x45, 0x10, 0xe0, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x47, 0x41,
	0x10, 0xe1, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x47, 0x42, 0x52, 0x10, 0xe2, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x55, 0x4b, 0x52, 0x10, 0xe3, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x52, 0x59, 0x10, 0xe4,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x53, 0x41, 0x10, 0xe5, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x55,
	0x5a, 0x42, 0x10, 0xe6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x55, 0x54, 0x10, 0xe7, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x56, 0x41, 0x54, 0x10, 0xe8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x45, 0x4e,
	0x10, 0xe9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x4e, 0x4d, 0x10, 0xea, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x56, 0x49, 0x52, 0x10, 0xeb, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x57, 0x4c, 0x46, 0x10, 0xec,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x45, 0x53, 0x48, 0x10, 0xed, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x59,
	0x45, 0x4d, 0x10, 0xee, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x4d, 0x42, 0x10, 0xef, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x5a, 0x57, 0x45, 0x10, 0xf0, 0x01, 0x42, 0x5d, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x13, 0x6f, 0x62, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f,
	0x6f, 0x62, 0x72, 0x70, 0x63, 0x2f, 0x75, 0x73, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x55, 0x58, 0x58,
	0xaa, 0x02, 0x04, 0x55, 0x73, 0x65, 0x72, 0xca, 0x02, 0x04, 0x55, 0x73, 0x65, 0x72, 0xe2, 0x02,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x04, 0x55, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_country_proto_rawDescOnce sync.Once
	file_user_country_proto_rawDescData = file_user_country_proto_rawDesc
)

func file_user_country_proto_rawDescGZIP() []byte {
	file_user_country_proto_rawDescOnce.Do(func() {
		file_user_country_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_country_proto_rawDescData)
	})
	return file_user_country_proto_rawDescData
}

var file_user_country_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_user_country_proto_goTypes = []interface{}{
	(CurrencyCode)(0),    // 0: user.CurrencyCode
	(CountryCode)(0),     // 1: user.CountryCode
	(CountryISOCode1)(0), // 2: user.CountryISOCode1
}
var file_user_country_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_user_country_proto_init() }
func file_user_country_proto_init() {
	if File_user_country_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_country_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_country_proto_goTypes,
		DependencyIndexes: file_user_country_proto_depIdxs,
		EnumInfos:         file_user_country_proto_enumTypes,
	}.Build()
	File_user_country_proto = out.File
	file_user_country_proto_rawDesc = nil
	file_user_country_proto_goTypes = nil
	file_user_country_proto_depIdxs = nil
}
